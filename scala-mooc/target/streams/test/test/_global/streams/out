[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(homeworks.collections.seq_riddle_test, org.scalatest.tools.Framework$$anon$1@1ba43839, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(homeworks.collections.caesar_test, org.scalatest.tools.Framework$$anon$1@1ba43839, false, [SuiteSelector])[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning TaskDef(homeworks.futures.futures_sequence_test, org.scalatest.tools.Framework$$anon$1@1ba43839, false, [SuiteSelector])[0m
[0m[[0m[0minfo[0m] [0m[0m[32mseq_riddle_test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mnextLine[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should produce next line[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mfunSeq[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should produce next line[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcaesar_test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mcaesar encryptor[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should encrypt and decrypt simple words[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should encrypt and decrypt with little offset[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should encrypt and decrypt with big offset[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should encrypt and decrypt empty string[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should compose encryptions[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32m- should consider cycles[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32mfutures_sequence_test:[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[32msequence[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m- should return list of results *** FAILED ***[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  homeworks.HomeworksUtils$TaskNotDone: –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ: [0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `encrypt`[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.HomeworksUtils$TaskSyntax$.homeworks$HomeworksUtils$TaskSyntax$$$anonfun$task$1(HomeworksUtils.scala:18)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.HomeworksUtils$TaskSyntax$$anonfun$task$extension$1.applySeq(HomeworksUtils.scala:16)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.HomeworksUtils$TaskDef.apply(HomeworksUtils.scala:11)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.HomeworksUtils$TaskDef.apply$(HomeworksUtils.scala:11)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.HomeworksUtils$TaskSyntax$$anonfun$task$extension$1.apply(HomeworksUtils.scala:16)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.futures.task_futures_sequence$.fullSequence(task_futures_sequence.scala:22)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at homeworks.futures.futures_sequence_test.$anonfun$new$1(futures_sequence_test.scala:19)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf(OutcomeOf.scala:85)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf.outcomeOf$(OutcomeOf.scala:83)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m  ...[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mRun completed in 296 milliseconds.[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTotal number of tests run: 9[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mSuites: completed 3, aborted 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[36mTests: succeeded 8, failed 1, canceled 0, ignored 0, pending 0[0m[0m
[0m[[0m[0minfo[0m] [0m[0m[31m*** 1 TEST FAILED ***[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mPassed tests:[0m
[0m[[0m[0mdebug[0m] [0m[0m	homeworks.collections.caesar_test[0m
[0m[[0m[0mdebug[0m] [0m[0m	homeworks.collections.seq_riddle_test[0m
[0m[[0m[31merror[0m] [0m[0mFailed tests:[0m
[0m[[0m[31merror[0m] [0m[0m	homeworks.futures.futures_sequence_test[0m
[0m[[0m[31merror[0m] [0m[0m(Test / [31mtest[0m) sbt.TestsFailedException: Tests unsuccessful[0m
